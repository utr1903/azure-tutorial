apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    nodePoolName: {{ .Values.nodePoolName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
      nodePoolName: {{ .Values.nodePoolName }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        nodePoolName: {{ .Values.nodePoolName }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.dockerhubName }}/{{ .Values.name }}"
          env:
            - name: SERVICE_BUS_CONNECTION_STRING
              value: {{ .Values.serviceBusConnectionString }}
            - name: SERVICE_BUS_QUEUE_NAME
              value: {{ .Values.serviceBusQueueName }}
            - name: EVENT_HUB_CONNECTION_STRING
              value: {{ .Values.eventHubConnectionString }}
            - name: EVENT_HUB_NAME
              value: {{ .Values.eventHubName }}
            - name: INFLUXDB_SERVICE_NAME
              value: {{ .Values.influxdbServiceName }}
            - name: INFLUXDB_NAMESPACE
              value: {{ .Values.influxdbNamespace }}
            - name: INFLUXDB_PORT
              value: "{{ .Values.influxdbPort }}"
            - name: INFLUXDB_ORGANIZATION_NAME
              value: {{ .Values.influxdbOrganization }}
            - name: INFLUXDB_BUCKET_NAME
              value: {{ .Values.influxdbBucket }}
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              cpu: 400m
              memory: 1000Mi
          livenessProbe:
              httpGet:
                path: /health
                port: 80
              initialDelaySeconds: 30
              periodSeconds: 10
      nodeSelector:
        nodePoolName: {{ .Values.nodePoolName }}
